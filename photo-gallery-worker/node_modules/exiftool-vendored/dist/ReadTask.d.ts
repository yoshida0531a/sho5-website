import { ExifToolTask } from "./ExifToolTask";
import { Tags } from "./Tags";
export declare const ReadTaskOptionFields: ["backfillTimezones", "defaultVideosToUTC", "geoTz", "geolocation", "ignoreZeroZeroLatLon", "imageHashType", "includeImageDataMD5", "inferTimezoneFromDatestamps", "inferTimezoneFromDatestampTags", "numericTags", "useMWG"];
export declare function nullish(s: string | undefined): s is undefined;
export declare const DefaultReadTaskOptions: {
    readonly includeImageDataMD5: boolean | undefined;
    readonly imageHashType: false | "MD5" | "SHA256" | "SHA512";
    readonly useMWG: boolean;
    readonly numericTags: string[];
    readonly defaultVideosToUTC: boolean;
    readonly backfillTimezones: boolean;
    readonly inferTimezoneFromDatestamps: boolean;
    readonly inferTimezoneFromDatestampTags: (keyof Tags)[];
    readonly ignoreZeroZeroLatLon: boolean;
    readonly geoTz: typeof import("./GeoTz").geoTz;
    readonly geolocation: boolean;
    readonly optionalArgs: string[];
};
export type ReadTaskOptions = typeof DefaultReadTaskOptions;
export declare class ReadTask extends ExifToolTask<Tags> {
    #private;
    readonly sourceFile: string;
    readonly args: string[];
    readonly options: ReadTaskOptions;
    private readonly degroup;
    private constructor();
    static for(filename: string, options: Partial<ReadTaskOptions>): ReadTask;
    toString(): string;
    parse(data: string, err?: Error): Tags;
}
